{"ast":null,"code":"export function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexport function isNumber(value) {\n  return typeof value == 'number' && !isNaN(value);\n}\nexport function isBoolean(value) {\n  return value === true || value === false;\n}\nexport function convertType(value) {\n  if (isNumber(value)) {\n    return value.toString();\n  }\n\n  if (isBoolean(value)) {\n    return value ? '1' : '-1';\n  }\n\n  if (isString(value)) {\n    return value.toLowerCase();\n  }\n\n  return value;\n}\nexport function sortTodos(todos, sort) {\n  return todos.sort((a, b) => {\n    const {\n      order,\n      orderBy\n    } = sort;\n    const aLocale = convertType(a[orderBy]);\n    const bLocale = convertType(b[orderBy]);\n\n    if (order === 'asc') {\n      return aLocale.localeCompare(bLocale, 'en', {\n        numeric: isNumber(b[orderBy])\n      });\n    } else {\n      return bLocale.localeCompare(aLocale, 'en', {\n        numeric: isNumber(a[orderBy])\n      });\n    }\n  });\n}\nexport function paginateTodos(sortedTodos, activePage, todosPerPage) {\n  return [...sortedTodos].slice((activePage - 1) * todosPerPage, activePage * todosPerPage);\n}","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/helpers.js"],"names":["isString","value","String","isNumber","isNaN","isBoolean","convertType","toString","toLowerCase","sortTodos","todos","sort","a","b","order","orderBy","aLocale","bLocale","localeCompare","numeric","paginateTodos","sortedTodos","activePage","todosPerPage","slice"],"mappings":"AAAE,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAArD;AACD;AAED,OAAO,SAASC,QAAT,CAAkBF,KAAlB,EAAyB;AAC9B,SAAO,OAAOA,KAAP,IAAgB,QAAhB,IAA4B,CAACG,KAAK,CAACH,KAAD,CAAzC;AACD;AAED,OAAO,SAASI,SAAT,CAAmBJ,KAAnB,EAA0B;AAC/B,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAnC;AACD;AAED,OAAO,SAASK,WAAT,CAAqBL,KAArB,EAA4B;AACjC,MAAIE,QAAQ,CAACF,KAAD,CAAZ,EAAqB;AACnB,WAAOA,KAAK,CAACM,QAAN,EAAP;AACD;;AAED,MAAIF,SAAS,CAACJ,KAAD,CAAb,EAAsB;AACpB,WAAOA,KAAK,GAAG,GAAH,GAAS,IAArB;AACD;;AAED,MAAID,QAAQ,CAACC,KAAD,CAAZ,EAAoB;AAChB,WAAOA,KAAK,CAACO,WAAN,EAAP;AACH;;AAED,SAAOP,KAAP;AACD;AAED,OAAO,SAASQ,SAAT,CAAmBC,KAAnB,EAA0BC,IAA1B,EAAgC;AACrC,SAAOD,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqBJ,IAA3B;AAEA,UAAMK,OAAO,GAAGV,WAAW,CAACM,CAAC,CAACG,OAAD,CAAF,CAA3B;AACA,UAAME,OAAO,GAAGX,WAAW,CAACO,CAAC,CAACE,OAAD,CAAF,CAA3B;;AAEA,QAAID,KAAK,KAAK,KAAd,EAAqB;AACnB,aAAOE,OAAO,CAACE,aAAR,CAAsBD,OAAtB,EAA+B,IAA/B,EAAqC;AAAEE,QAAAA,OAAO,EAAEhB,QAAQ,CAACU,CAAC,CAACE,OAAD,CAAF;AAAnB,OAArC,CAAP;AACD,KAFD,MAEO;AACL,aAAOE,OAAO,CAACC,aAAR,CAAsBF,OAAtB,EAA+B,IAA/B,EAAqC;AAAEG,QAAAA,OAAO,EAAEhB,QAAQ,CAACS,CAAC,CAACG,OAAD,CAAF;AAAnB,OAArC,CAAP;AACD;AACF,GAXM,CAAP;AAYD;AAED,OAAO,SAASK,aAAT,CAAuBC,WAAvB,EAAoCC,UAApC,EAAgDC,YAAhD,EAA8D;AACnE,SAAO,CAAC,GAAGF,WAAJ,EAAiBG,KAAjB,CAAuB,CAACF,UAAU,GAAG,CAAd,IAAmBC,YAA1C,EAAwDD,UAAU,GAAGC,YAArE,CAAP;AACD","sourcesContent":["  export function isString(value) {\n    return typeof value === 'string' || value instanceof String\n  }\n  \n  export function isNumber(value) {\n    return typeof value == 'number' && !isNaN(value)\n  }\n  \n  export function isBoolean(value) {\n    return value === true || value === false\n  }\n\n  export function convertType(value) {\n    if (isNumber(value)) {\n      return value.toString()\n    }\n\n    if (isBoolean(value)) {\n      return value ? '1' : '-1'\n    }\n\n    if (isString(value)){\n        return value.toLowerCase()\n    }\n  \n    return value\n  }\n  \n  export function sortTodos(todos, sort) {\n    return todos.sort((a, b) => {\n      const { order, orderBy } = sort\n \n      const aLocale = convertType(a[orderBy])\n      const bLocale = convertType(b[orderBy])\n  \n      if (order === 'asc') {\n        return aLocale.localeCompare(bLocale, 'en', { numeric: isNumber(b[orderBy]) })\n      } else {\n        return bLocale.localeCompare(aLocale, 'en', { numeric: isNumber(a[orderBy]) })\n      }\n    })\n  }\n  \n  export function paginateTodos(sortedTodos, activePage, todosPerPage) {\n    return [...sortedTodos].slice((activePage - 1) * todosPerPage, activePage * todosPerPage)\n  }\n  "]},"metadata":{},"sourceType":"module"}