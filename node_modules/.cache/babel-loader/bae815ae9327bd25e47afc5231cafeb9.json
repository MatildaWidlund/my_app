{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/Sorting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bands = [{\n  id: 1,\n  title: 'Nightwish',\n  userId: 9,\n  members: 6\n}, {\n  id: 2,\n  title: 'Metallica',\n  userId: 10,\n  members: 4\n}, {\n  id: 3,\n  title: 'Nirvana',\n  userId: 3,\n  members: 3\n}];\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('title');\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'userId',\n        id: 'id',\n        title: 'title'\n      };\n      const sortProperty = types[type];\n      const sorted = [...bands].sort((a, b) => a[sortProperty] - b[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"userId\",\n        children: \"UserID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"id\",\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), data.map(band => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Band: ${band.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Band: ${band.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `UserId: ${band.userId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"$\", sortType]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, band.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AceYV94kudB3TPp0dMLFSTzAjN4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/Sorting.js"],"names":["React","useState","useEffect","bands","id","title","userId","members","App","data","setData","sortType","setSortType","sortArray","type","types","sortProperty","sorted","sort","a","b","e","target","value","map","band","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,OAAO,EAAE;AAJX,CADY,EAOZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,MAAM,EAAE,EAHV;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAPY,EAaZ;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,MAAM,EAAE,CAHV;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAbY,CAAd;;AAqBA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,OAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAGC,IAAI,IAAI;AACxB,YAAMC,KAAK,GAAG;AACZT,QAAAA,MAAM,EAAE,QADI;AAEZF,QAAAA,EAAE,EAAE,IAFQ;AAGZC,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKA,YAAMW,YAAY,GAAGD,KAAK,CAACD,IAAD,CAA1B;AACA,YAAMG,MAAM,GAAG,CAAC,GAAGd,KAAJ,EAAWe,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACH,YAAD,CAAD,GAAkBI,CAAC,CAACJ,YAAD,CAA7C,CAAf;AACAN,MAAAA,OAAO,CAACO,MAAD,CAAP;AACD,KATD;;AAWAJ,IAAAA,SAAS,CAACF,QAAD,CAAT;AACD,GAbQ,EAaN,CAACA,QAAD,CAbM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAGU,CAAD,IAAOT,WAAW,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EASGd,IAAI,CAACe,GAAL,CAASC,IAAI,iBACZ;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAA1B;AAAA,8BACE;AAAA,kBAAO,SAAQD,IAAI,CAACrB,EAAG;AAAvB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAO,SAAQqB,IAAI,CAACpB,KAAM;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAO,WAAUoB,IAAI,CAACnB,MAAO;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,wBAAOK,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,OAAUc,IAAI,CAACrB,EAAf;AAAA;AAAA;AAAA;AAAA,YADD,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvCQI,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst bands = [\n  {\n    id: 1,\n    title: 'Nightwish',\n    userId: 9,\n    members: 6,\n  },\n  {\n    id: 2,\n    title: 'Metallica',\n    userId: 10,\n    members: 4,\n  },\n  {\n    id: 3,\n    title: 'Nirvana',\n    userId: 3,\n    members: 3,\n  },\n];\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('title');\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'userId',\n        id: 'id',\n        title: 'title'\n      };\n      const sortProperty = types[type];\n      const sorted = [...bands].sort((a, b) => a[sortProperty] - b[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]); \n\n  return (\n    <div className=\"App\">\n      <select onChange={(e) => setSortType(e.target.value)}> \n        <option value=\"userId\">UserID</option>\n        <option value=\"id\">id</option>\n        <option value=\"title\">title</option>\n\n\n      </select>\n\n      {data.map(band => (\n        <div key={band.id} style={{ margin: '30px' }}>\n          <div>{`Band: ${band.id}`}</div>\n          <div>{`Band: ${band.title}`}</div>\n          <div>{`UserId: ${band.userId}`}</div>\n          <div>${sortType}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}