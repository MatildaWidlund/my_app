{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Todolist from './Todolist';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage] = useState(10);\n\n  const fetchTodos = async () => {\n    const {\n      data\n    } = await Axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n    const todos = data;\n    setTodos(todos);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const deleteTodo = todoId => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const completedTodo = todoId => {\n    setTodos(todos.map(todo => todo.id == todoId ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  const indexLastTodo = currentPage * todosPerPage;\n  const indexFirstTodo = indexLastTodo - todosPerPage;\n  const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('tasks');\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'UserID',\n        id: 'ID',\n        title: 'Title'\n      };\n      const sortProperty = types[type];\n      const sorted = [...tasks].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \" TODO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"userId\",\n        children: \"userId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"id\",\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n      todos: currentTodos,\n      onDelete: deleteTodo,\n      onCompleted: completedTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      todosPerPage: todosPerPage,\n      todos: todos.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AEXxBFAR9fldQxOK2KDwKsRYmUM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/App.js"],"names":["React","useEffect","useState","Axios","Todolist","Pagination","App","todos","setTodos","currentPage","setCurrentPage","todosPerPage","fetchTodos","data","get","deleteTodo","todoId","filter","todo","id","completedTodo","map","completed","indexLastTodo","indexFirstTodo","currentTodos","slice","paginate","pageNumber","setData","sortType","setSortType","sortArray","type","types","userId","title","sortProperty","sorted","tasks","sort","a","b","e","target","value","length"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport Todolist from './Todolist';\nimport Pagination from './Pagination';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage] = useState(10);\n\n  const fetchTodos = async () => {\n    const { data } = await Axios.get(\n      \"https://jsonplaceholder.typicode.com/todos\"\n    );\n    const todos = data;\n    setTodos(todos);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const deleteTodo = (todoId) => {\n    setTodos(todos.filter((todo) => todo.id !== todoId))\n  }\n\n  const completedTodo = (todoId) => {\n    setTodos(\n      todos.map((todo) => \n        todo.id == todoId ? \n        {...todo, completed: !todo.completed}\n        : todo))\n  }\n\n  const indexLastTodo = currentPage * todosPerPage; \n  const indexFirstTodo = indexLastTodo - todosPerPage;\n  const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('tasks');\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'UserID',\n        id: 'ID',\n        title: 'Title',\n      };\n      const sortProperty = types[type];\n      const sorted = [...tasks].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]); \n  return (\n    <div className=\"App\">\n      <header> TODO </header>\n\n      <select onChange={(e) => setSortType(e.target.value)}> \n        <option value=\"userId\">userId</option>\n        <option value=\"id\">id</option>\n        <option value=\"title\">Title</option>\n      </select>\n\n      <Todolist \n      todos={currentTodos}\n      onDelete={deleteTodo}\n      onCompleted={completedTodo}\n      />\n     \n      <Pagination todosPerPage={todosPerPage} todos={todos.length} paginate={paginate}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}