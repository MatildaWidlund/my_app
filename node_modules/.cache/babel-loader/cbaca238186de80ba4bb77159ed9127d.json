{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/Todolist.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Todo from './Todo';\nimport React, { useMemo, useEffect, useState } from 'react';\nimport { sortTodos, paginateTodos } from './helpers';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todolist(_ref) {\n  _s();\n\n  let {\n    todos,\n    onDelete,\n    onCompleted\n  } = _ref;\n  const [sort, setSort] = useState({\n    order: 'asc',\n    orderBy: 'id'\n  });\n  const sortedTodos = useMemo(() => sortTodos(todos, sort), [todos, sort]);\n\n  const handleSort = type => {\n    setActivePage(1);\n    setSort(prevSort => ({\n      order: 'asc',\n      orderBy: type\n    }));\n  };\n\n  const [activePage, setActivePage] = useState(1);\n  const todosPerPage = 10;\n  const calculatedTodos = paginateTodos(sortedTodos, activePage, todosPerPage);\n  const totalPages = Math.ceil(todos.length / todosPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Box\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleSort(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"userId\",\n        children: \"UserID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"id\",\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ListOfTodos\",\n      children: calculatedTodos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        onDelete: onDelete,\n        onCompleted: onCompleted\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      activePage: activePage,\n      totalPages: totalPages,\n      setActivePage: setActivePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todolist, \"+YwfTZYkXDCIfDXD7Yxv4XI7cJE=\");\n\n_c = Todolist;\nexport default Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/Todolist.js"],"names":["Todo","React","useMemo","useEffect","useState","sortTodos","paginateTodos","Pagination","Todolist","todos","onDelete","onCompleted","sort","setSort","order","orderBy","sortedTodos","handleSort","type","setActivePage","prevSort","activePage","todosPerPage","calculatedTodos","totalPages","Math","ceil","length","e","target","value","map","todo","id"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,SAAzB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,WAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,QAAT,OAAkD;AAAA;;AAAA,MAAhC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,GAAgC;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAACU,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAD,CAAhC;AACA,QAAMC,WAAW,GAAGd,OAAO,CAAC,MAAKG,SAAS,CAACI,KAAD,EAAQG,IAAR,CAAf,EAA8B,CAACH,KAAD,EAAQG,IAAR,CAA9B,CAA3B;;AAEA,QAAMK,UAAU,GAAIC,IAAD,IAAU;AAC3BC,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAN,IAAAA,OAAO,CAAEO,QAAD,KAAe;AACrBN,MAAAA,KAAK,EAAE,KADc;AAErBC,MAAAA,OAAO,EAAEG;AAFY,KAAf,CAAD,CAAP;AAID,GAND;;AAQA,QAAM,CAACG,UAAD,EAAaF,aAAb,IAA8Bf,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAMkB,YAAY,GAAG,EAArB;AACA,QAAMC,eAAe,GAAGjB,aAAa,CAACU,WAAD,EAAcK,UAAd,EAA0BC,YAA1B,CAArC;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUjB,KAAK,CAACkB,MAAN,GAAeL,YAAzB,CAAnB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAGM,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGP,eAAe,CAACQ,GAAhB,CAAqBC,IAAD,iBACnB,QAAC,IAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,QAAQ,EAAEtB,QAHZ;AAIE,QAAA,WAAW,EAAEC;AAJf,SACOqB,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAgBE,QAAC,UAAD;AACI,MAAA,UAAU,EAAEZ,UADhB;AAEI,MAAA,UAAU,EAAEG,UAFhB;AAGI,MAAA,aAAa,EAAEL;AAHnB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GAzCQX,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import './App.css';\nimport Todo from './Todo';\nimport React, { useMemo, useEffect, useState} from 'react';\nimport { sortTodos, paginateTodos } from './helpers'\nimport Pagination from './Pagination'\n\nfunction Todolist({todos, onDelete, onCompleted}) {  \n  const [sort, setSort] = useState({order: 'asc', orderBy: 'id'})\n  const sortedTodos = useMemo(()=> sortTodos(todos, sort), [todos, sort])\n\n  const handleSort = (type) => {\n    setActivePage(1)\n    setSort((prevSort) => ({\n      order: 'asc',\n      orderBy: type,\n    }))\n  }\n\n  const [activePage, setActivePage] = useState(1)\n  const todosPerPage = 10\n  const calculatedTodos = paginateTodos(sortedTodos, activePage, todosPerPage)\n  const totalPages = Math.ceil(todos.length / todosPerPage)\n\n  return (\n    <div className=\"Box\">\n      <select onChange={(e) => handleSort(e.target.value)}> \n        <option value=\"userId\">UserID</option>\n        <option value=\"id\">id</option>\n        <option value=\"title\">title</option>\n      </select>\n\n      <div className=\"ListOfTodos\">   \n        {calculatedTodos.map((todo) => (\n          <Todo \n            key={todo.id} \n            todo={todo} \n            onDelete={onDelete} \n            onCompleted={onCompleted} />\n        ))}\n      </div>\n      <Pagination\n          activePage={activePage}\n          totalPages={totalPages}\n          setActivePage={setActivePage}\n        />\n    </div>\n  );\n}\n\nexport default Todolist;\n\n"]},"metadata":{},"sourceType":"module"}