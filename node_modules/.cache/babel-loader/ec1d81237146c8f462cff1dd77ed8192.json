{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/Pagination.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  let {\n    todosPerPage,\n    todos,\n    paginate\n  } = _ref;\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(todos / todosPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => paginate(number),\n        href: \"!#\",\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/Pagination.js"],"names":["Pagination","todosPerPage","todos","paginate","pageNumbers","i","Math","ceil","push","map","number"],"mappings":";;;AAAA,MAAMA,UAAU,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,GAAsC;AACxD,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGD,YAAlB,CAArB,EAAsDI,CAAC,EAAvD,EAA2D;AACzDD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,sBACE;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACGD,WAAW,CAACK,GAAZ,CAAgBC,MAAM,iBACnB;AAAG,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAACO,MAAD,CAA1B;AAAoC,QAAA,IAAI,EAAC,IAAzC;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlBD;;KAAMV,U;AAoBN,eAAeA,UAAf","sourcesContent":["const Pagination = ({ todosPerPage, todos, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(todos / todosPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n            <a onClick={() => paginate(number)} href='!#'>\n              {number}\n            </a>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Pagination;"]},"metadata":{},"sourceType":"module"}