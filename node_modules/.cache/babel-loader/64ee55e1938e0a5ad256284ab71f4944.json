{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/Sorting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './Todolist';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sorting(todos, onDelete, onComplete) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('albums');\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'user_id',\n        id: 'id',\n        title: 'title'\n      };\n      const sortProperty = types[type];\n      const sorted = [...todos].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"user_id\",\n        children: \"userId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"id\",\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"title\",\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n      todos: currentTodos,\n      onDelete: onDelete,\n      onCompleted: onComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sorting, \"kzAfolCNFqc+lytm9rJhYvlO9sU=\");\n\n_c = Sorting;\nexport default Sorting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sorting\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/Sorting.js"],"names":["React","useState","useEffect","TodoList","Sorting","todos","onDelete","onComplete","data","setData","sortType","setSortType","sortArray","type","types","userId","id","title","sortProperty","sorted","sort","a","b","e","target","value","currentTodos"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAA;;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,QAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAGC,IAAI,IAAI;AACxB,YAAMC,KAAK,GAAG;AACZC,QAAAA,MAAM,EAAE,SADI;AAEZC,QAAAA,EAAE,EAAE,IAFQ;AAGZC,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKA,YAAMC,YAAY,GAAGJ,KAAK,CAACD,IAAD,CAA1B;AACA,YAAMM,MAAM,GAAG,CAAC,GAAGd,KAAJ,EAAWe,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACJ,YAAD,CAAD,GAAkBG,CAAC,CAACH,YAAD,CAA7C,CAAf;AACAT,MAAAA,OAAO,CAACU,MAAD,CAAP;AACD,KATD;;AAWAP,IAAAA,SAAS,CAACF,QAAD,CAAT;AACD,GAbQ,EAaN,CAACA,QAAD,CAbM,CAAT;AAeA,sBACE;AAAA,4BACE;AAAQ,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AACA,MAAA,KAAK,EAAEC,YADP;AAEA,MAAA,QAAQ,EAAEpB,QAFV;AAGA,MAAA,WAAW,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQH,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoList from './Todolist'\nimport './App.css';\n\nfunction Sorting(todos, onDelete, onComplete) {\n  const [data, setData] = useState([]);\n  const [sortType, setSortType] = useState('albums');\n\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        userId: 'user_id',\n        id: 'id',\n        title: 'title',\n      };\n      const sortProperty = types[type];\n      const sorted = [...todos].sort((a, b) => b[sortProperty] - a[sortProperty]);\n      setData(sorted);\n    };\n\n    sortArray(sortType);\n  }, [sortType]); \n\n  return (\n    <div>\n      <select onChange={(e) => setSortType(e.target.value)}> \n        <option value=\"user_id\">userId</option>\n        <option value=\"id\">id</option>\n        <option value=\"title\">title</option>\n      </select>\n\n      <Todolist \n      todos={currentTodos}\n      onDelete={onDelete}\n      onCompleted={onComplete}\n      />\n    </div>\n  );\n}\n\nexport default Sorting;"]},"metadata":{},"sourceType":"module"}