{"ast":null,"code":"var _jsxFileName = \"/Users/Matti/Documents/hiq-test/my_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Todolist from './Todolist';\nimport Pagination from './Pagination';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage] = useState(10);\n\n  const fetchTodos = async () => {\n    const {\n      data\n    } = await Axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n    const todos = data;\n    setTodos(todos);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const deleteTodo = todoId => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  const completedTodo = todoId => {\n    setTodos(todos.map(todo => todo.id == todoId ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  };\n\n  const indexLastTodo = currentPage * todosPerPage;\n  const indexFirstTodo = indexLastTodo - todosPerPage;\n  const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pageCount = Math.ceil(todos.length / todosPerPage);\n\n  const changePage = _ref => {\n    let {\n      selected\n    } = _ref;\n    setCurrentPage(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \" TODO \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n      todos: currentTodos,\n      onDelete: deleteTodo,\n      onCompleted: completedTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      pageCount: pageCount,\n      onPageChange: changePage,\n      containerClassName: \"paginationsBttns\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5y7hjQLWHQZbBwr9Nz6SulI5iYk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Matti/Documents/hiq-test/my_app/src/App.js"],"names":["React","useEffect","useState","Axios","Todolist","Pagination","ReactPaginate","App","todos","setTodos","currentPage","setCurrentPage","todosPerPage","fetchTodos","data","get","deleteTodo","todoId","filter","todo","id","completedTodo","map","completed","indexLastTodo","indexFirstTodo","currentTodos","slice","paginate","pageNumber","pageCount","Math","ceil","length","changePage","selected"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,YAAD,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMW,UAAU,GAAG,YAAY;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CACrB,4CADqB,CAAvB;AAGA,UAAMP,KAAK,GAAGM,IAAd;AACAL,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAND;;AAQAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMG,UAAU,GAAIC,MAAD,IAAY;AAC7BR,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYH,MAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,aAAa,GAAIJ,MAAD,IAAY;AAChCR,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CAAWH,IAAD,IACRA,IAAI,CAACC,EAAL,IAAWH,MAAX,GACA,EAAC,GAAGE,IAAJ;AAAUI,MAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAA3B,KADA,GAEEJ,IAHJ,CADM,CAAR;AAKD,GAND;;AAQA,QAAMK,aAAa,GAAGd,WAAW,GAAGE,YAApC;AACA,QAAMa,cAAc,GAAGD,aAAa,GAAGZ,YAAvC;AACA,QAAMc,YAAY,GAAGlB,KAAK,CAACmB,KAAN,CAAYF,cAAZ,EAA4BD,aAA5B,CAArB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIlB,cAAc,CAACkB,UAAD,CAA7C;;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUxB,KAAK,CAACyB,MAAN,GAAerB,YAAzB,CAAlB;;AAEA,QAAMsB,UAAU,GAAG,QAAe;AAAA,QAAd;AAACC,MAAAA;AAAD,KAAc;AAChCxB,IAAAA,cAAc,CAACwB,QAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACA,MAAA,KAAK,EAAET,YADP;AAEA,MAAA,QAAQ,EAAEV,UAFV;AAGA,MAAA,WAAW,EAAEK;AAHb;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,aAAD;AACE,MAAA,aAAa,EAAE,UADjB;AAEE,MAAA,SAAS,EAAE,MAFb;AAGE,MAAA,SAAS,EAAES,SAHb;AAIE,MAAA,YAAY,EAAEI,UAJhB;AAKE,MAAA,kBAAkB,EAAE;AALtB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAzDQ3B,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState} from 'react';\nimport Axios from 'axios';\nimport Todolist from './Todolist';\nimport Pagination from './Pagination';\nimport ReactPaginate from 'react-paginate';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [todosPerPage] = useState(10);\n\n  const fetchTodos = async () => {\n    const { data } = await Axios.get(\n      \"https://jsonplaceholder.typicode.com/todos\"\n    );\n    const todos = data;\n    setTodos(todos);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const deleteTodo = (todoId) => {\n    setTodos(todos.filter((todo) => todo.id !== todoId))\n  }\n\n  const completedTodo = (todoId) => {\n    setTodos(\n      todos.map((todo) => \n        todo.id == todoId ? \n        {...todo, completed: !todo.completed}\n        : todo))\n  }\n\n  const indexLastTodo = currentPage * todosPerPage; \n  const indexFirstTodo = indexLastTodo - todosPerPage;\n  const currentTodos = todos.slice(indexFirstTodo, indexLastTodo);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const pageCount = Math.ceil(todos.length / todosPerPage)\n\n  const changePage = ({selected}) =>{\n    setCurrentPage(selected);\n  }\n\n  return (\n    <div className=\"App\">\n      <header> TODO </header>\n      <Todolist \n      todos={currentTodos}\n      onDelete={deleteTodo}\n      onCompleted={completedTodo}\n      />\n      <ReactPaginate \n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationsBttns\"}\n      ></ReactPaginate>\n      {/* <Pagination todosPerPage={todosPerPage} todos={todos.length} paginate={paginate}/> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}